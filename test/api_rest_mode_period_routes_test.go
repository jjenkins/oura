/*
Oura API Documentation

Testing RestModePeriodRoutesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package oura

import (
	"context"
	"testing"

	openapiclient "github.com/jjenkins/oura"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_oura_RestModePeriodRoutesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RestModePeriodRoutesAPIService MultipleRestModePeriodDocumentsV2UsercollectionRestModePeriodGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.RestModePeriodRoutesAPI.MultipleRestModePeriodDocumentsV2UsercollectionRestModePeriodGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RestModePeriodRoutesAPIService SingleRestModePeriodDocumentV2UsercollectionRestModePeriodDocumentIdGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var documentId string

		resp, httpRes, err := apiClient.RestModePeriodRoutesAPI.SingleRestModePeriodDocumentV2UsercollectionRestModePeriodDocumentIdGet(context.Background(), documentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
