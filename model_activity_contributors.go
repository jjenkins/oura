/*
Oura API Documentation

# Overview   The Oura API allows Oura users and partner applications to improve their user experience with Oura data.  This document describes the Oura API Version 2 (V2), which supports access to the latest Oura Ring data types.  For access to other data types—which have not yet migrated to V2—refer to the [Oura API Version 1 (V1)](https://cloud.ouraring.com/docs/) documentation.  # Data Access  Individual Oura users can access their own data through the API by using a [Personal Access Token](https://cloud.ouraring.com/personal-access-tokens).  If you want to retrieve data for multiple users, a registered [API Application](https://cloud.ouraring.com/oauth/applications) is required.  API Applications are limited to **10** users before requiring approval from Oura. There is no limit once an application is approved.  Additionally, Oura users **must provide consent** to share each data type an API Application has access to.  All data access requests through the Oura API require [Authentication](https://cloud.ouraring.com/docs/authentication).  Additionally, we recommend that Oura users keep their mobile app updated to support API access for the latest data types.  # Authentication  The Oura API provides two methods for Authentication: (1) the OAuth2 protocol and (2) Personal Access Tokens. For more information on the OAuth2 flow, see our [Authentication instructions](https://cloud.ouraring.com/docs/authentication).  Access tokens must be included in the request header as follows: ```http GET /v2/usercollection/personal_info HTTP/1.1 Host: api.ouraring.com Authorization: Bearer <token> ```  # Oura HTTP Response Codes  | Response Code                        | Description | | ------------------------------------ | - | | 200 OK                               | Successful Response         | | 400 Query Parameter Validation Error | The request contains query parameters that are invalid or incorrectly formatted. | | 429 Request Rate Limit Exceeded        | The API is rate limited to 5000 requests in a 5 minute period. You will receive a 429 error code if you exceed this limit. [Contact us](mailto:api-support@ouraring.com) if you expect your usage to exceed this limit.| 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oura

import (
	"encoding/json"
)

// checks if the ActivityContributors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityContributors{}

// ActivityContributors Object defining activity score contributors.
type ActivityContributors struct {
	MeetDailyTargets NullableInt32 `json:"meet_daily_targets,omitempty"`
	MoveEveryHour NullableInt32 `json:"move_every_hour,omitempty"`
	RecoveryTime NullableInt32 `json:"recovery_time,omitempty"`
	StayActive NullableInt32 `json:"stay_active,omitempty"`
	TrainingFrequency NullableInt32 `json:"training_frequency,omitempty"`
	TrainingVolume NullableInt32 `json:"training_volume,omitempty"`
}

// NewActivityContributors instantiates a new ActivityContributors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityContributors() *ActivityContributors {
	this := ActivityContributors{}
	return &this
}

// NewActivityContributorsWithDefaults instantiates a new ActivityContributors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityContributorsWithDefaults() *ActivityContributors {
	this := ActivityContributors{}
	return &this
}

// GetMeetDailyTargets returns the MeetDailyTargets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityContributors) GetMeetDailyTargets() int32 {
	if o == nil || IsNil(o.MeetDailyTargets.Get()) {
		var ret int32
		return ret
	}
	return *o.MeetDailyTargets.Get()
}

// GetMeetDailyTargetsOk returns a tuple with the MeetDailyTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityContributors) GetMeetDailyTargetsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MeetDailyTargets.Get(), o.MeetDailyTargets.IsSet()
}

// HasMeetDailyTargets returns a boolean if a field has been set.
func (o *ActivityContributors) HasMeetDailyTargets() bool {
	if o != nil && o.MeetDailyTargets.IsSet() {
		return true
	}

	return false
}

// SetMeetDailyTargets gets a reference to the given NullableInt32 and assigns it to the MeetDailyTargets field.
func (o *ActivityContributors) SetMeetDailyTargets(v int32) {
	o.MeetDailyTargets.Set(&v)
}
// SetMeetDailyTargetsNil sets the value for MeetDailyTargets to be an explicit nil
func (o *ActivityContributors) SetMeetDailyTargetsNil() {
	o.MeetDailyTargets.Set(nil)
}

// UnsetMeetDailyTargets ensures that no value is present for MeetDailyTargets, not even an explicit nil
func (o *ActivityContributors) UnsetMeetDailyTargets() {
	o.MeetDailyTargets.Unset()
}

// GetMoveEveryHour returns the MoveEveryHour field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityContributors) GetMoveEveryHour() int32 {
	if o == nil || IsNil(o.MoveEveryHour.Get()) {
		var ret int32
		return ret
	}
	return *o.MoveEveryHour.Get()
}

// GetMoveEveryHourOk returns a tuple with the MoveEveryHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityContributors) GetMoveEveryHourOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MoveEveryHour.Get(), o.MoveEveryHour.IsSet()
}

// HasMoveEveryHour returns a boolean if a field has been set.
func (o *ActivityContributors) HasMoveEveryHour() bool {
	if o != nil && o.MoveEveryHour.IsSet() {
		return true
	}

	return false
}

// SetMoveEveryHour gets a reference to the given NullableInt32 and assigns it to the MoveEveryHour field.
func (o *ActivityContributors) SetMoveEveryHour(v int32) {
	o.MoveEveryHour.Set(&v)
}
// SetMoveEveryHourNil sets the value for MoveEveryHour to be an explicit nil
func (o *ActivityContributors) SetMoveEveryHourNil() {
	o.MoveEveryHour.Set(nil)
}

// UnsetMoveEveryHour ensures that no value is present for MoveEveryHour, not even an explicit nil
func (o *ActivityContributors) UnsetMoveEveryHour() {
	o.MoveEveryHour.Unset()
}

// GetRecoveryTime returns the RecoveryTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityContributors) GetRecoveryTime() int32 {
	if o == nil || IsNil(o.RecoveryTime.Get()) {
		var ret int32
		return ret
	}
	return *o.RecoveryTime.Get()
}

// GetRecoveryTimeOk returns a tuple with the RecoveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityContributors) GetRecoveryTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoveryTime.Get(), o.RecoveryTime.IsSet()
}

// HasRecoveryTime returns a boolean if a field has been set.
func (o *ActivityContributors) HasRecoveryTime() bool {
	if o != nil && o.RecoveryTime.IsSet() {
		return true
	}

	return false
}

// SetRecoveryTime gets a reference to the given NullableInt32 and assigns it to the RecoveryTime field.
func (o *ActivityContributors) SetRecoveryTime(v int32) {
	o.RecoveryTime.Set(&v)
}
// SetRecoveryTimeNil sets the value for RecoveryTime to be an explicit nil
func (o *ActivityContributors) SetRecoveryTimeNil() {
	o.RecoveryTime.Set(nil)
}

// UnsetRecoveryTime ensures that no value is present for RecoveryTime, not even an explicit nil
func (o *ActivityContributors) UnsetRecoveryTime() {
	o.RecoveryTime.Unset()
}

// GetStayActive returns the StayActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityContributors) GetStayActive() int32 {
	if o == nil || IsNil(o.StayActive.Get()) {
		var ret int32
		return ret
	}
	return *o.StayActive.Get()
}

// GetStayActiveOk returns a tuple with the StayActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityContributors) GetStayActiveOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StayActive.Get(), o.StayActive.IsSet()
}

// HasStayActive returns a boolean if a field has been set.
func (o *ActivityContributors) HasStayActive() bool {
	if o != nil && o.StayActive.IsSet() {
		return true
	}

	return false
}

// SetStayActive gets a reference to the given NullableInt32 and assigns it to the StayActive field.
func (o *ActivityContributors) SetStayActive(v int32) {
	o.StayActive.Set(&v)
}
// SetStayActiveNil sets the value for StayActive to be an explicit nil
func (o *ActivityContributors) SetStayActiveNil() {
	o.StayActive.Set(nil)
}

// UnsetStayActive ensures that no value is present for StayActive, not even an explicit nil
func (o *ActivityContributors) UnsetStayActive() {
	o.StayActive.Unset()
}

// GetTrainingFrequency returns the TrainingFrequency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityContributors) GetTrainingFrequency() int32 {
	if o == nil || IsNil(o.TrainingFrequency.Get()) {
		var ret int32
		return ret
	}
	return *o.TrainingFrequency.Get()
}

// GetTrainingFrequencyOk returns a tuple with the TrainingFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityContributors) GetTrainingFrequencyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrainingFrequency.Get(), o.TrainingFrequency.IsSet()
}

// HasTrainingFrequency returns a boolean if a field has been set.
func (o *ActivityContributors) HasTrainingFrequency() bool {
	if o != nil && o.TrainingFrequency.IsSet() {
		return true
	}

	return false
}

// SetTrainingFrequency gets a reference to the given NullableInt32 and assigns it to the TrainingFrequency field.
func (o *ActivityContributors) SetTrainingFrequency(v int32) {
	o.TrainingFrequency.Set(&v)
}
// SetTrainingFrequencyNil sets the value for TrainingFrequency to be an explicit nil
func (o *ActivityContributors) SetTrainingFrequencyNil() {
	o.TrainingFrequency.Set(nil)
}

// UnsetTrainingFrequency ensures that no value is present for TrainingFrequency, not even an explicit nil
func (o *ActivityContributors) UnsetTrainingFrequency() {
	o.TrainingFrequency.Unset()
}

// GetTrainingVolume returns the TrainingVolume field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityContributors) GetTrainingVolume() int32 {
	if o == nil || IsNil(o.TrainingVolume.Get()) {
		var ret int32
		return ret
	}
	return *o.TrainingVolume.Get()
}

// GetTrainingVolumeOk returns a tuple with the TrainingVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityContributors) GetTrainingVolumeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrainingVolume.Get(), o.TrainingVolume.IsSet()
}

// HasTrainingVolume returns a boolean if a field has been set.
func (o *ActivityContributors) HasTrainingVolume() bool {
	if o != nil && o.TrainingVolume.IsSet() {
		return true
	}

	return false
}

// SetTrainingVolume gets a reference to the given NullableInt32 and assigns it to the TrainingVolume field.
func (o *ActivityContributors) SetTrainingVolume(v int32) {
	o.TrainingVolume.Set(&v)
}
// SetTrainingVolumeNil sets the value for TrainingVolume to be an explicit nil
func (o *ActivityContributors) SetTrainingVolumeNil() {
	o.TrainingVolume.Set(nil)
}

// UnsetTrainingVolume ensures that no value is present for TrainingVolume, not even an explicit nil
func (o *ActivityContributors) UnsetTrainingVolume() {
	o.TrainingVolume.Unset()
}

func (o ActivityContributors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityContributors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MeetDailyTargets.IsSet() {
		toSerialize["meet_daily_targets"] = o.MeetDailyTargets.Get()
	}
	if o.MoveEveryHour.IsSet() {
		toSerialize["move_every_hour"] = o.MoveEveryHour.Get()
	}
	if o.RecoveryTime.IsSet() {
		toSerialize["recovery_time"] = o.RecoveryTime.Get()
	}
	if o.StayActive.IsSet() {
		toSerialize["stay_active"] = o.StayActive.Get()
	}
	if o.TrainingFrequency.IsSet() {
		toSerialize["training_frequency"] = o.TrainingFrequency.Get()
	}
	if o.TrainingVolume.IsSet() {
		toSerialize["training_volume"] = o.TrainingVolume.Get()
	}
	return toSerialize, nil
}

type NullableActivityContributors struct {
	value *ActivityContributors
	isSet bool
}

func (v NullableActivityContributors) Get() *ActivityContributors {
	return v.value
}

func (v *NullableActivityContributors) Set(val *ActivityContributors) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityContributors) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityContributors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityContributors(val *ActivityContributors) *NullableActivityContributors {
	return &NullableActivityContributors{value: val, isSet: true}
}

func (v NullableActivityContributors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityContributors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


