/*
Oura API Documentation

# Overview   The Oura API allows Oura users and partner applications to improve their user experience with Oura data.  This document describes the Oura API Version 2 (V2), which supports access to the latest Oura Ring data types.  For access to other data types—which have not yet migrated to V2—refer to the [Oura API Version 1 (V1)](https://cloud.ouraring.com/docs/) documentation.  # Data Access  Individual Oura users can access their own data through the API by using a [Personal Access Token](https://cloud.ouraring.com/personal-access-tokens).  If you want to retrieve data for multiple users, a registered [API Application](https://cloud.ouraring.com/oauth/applications) is required.  API Applications are limited to **10** users before requiring approval from Oura. There is no limit once an application is approved.  Additionally, Oura users **must provide consent** to share each data type an API Application has access to.  All data access requests through the Oura API require [Authentication](https://cloud.ouraring.com/docs/authentication).  Additionally, we recommend that Oura users keep their mobile app updated to support API access for the latest data types.  # Authentication  The Oura API provides two methods for Authentication: (1) the OAuth2 protocol and (2) Personal Access Tokens. For more information on the OAuth2 flow, see our [Authentication instructions](https://cloud.ouraring.com/docs/authentication).  Access tokens must be included in the request header as follows: ```http GET /v2/usercollection/personal_info HTTP/1.1 Host: api.ouraring.com Authorization: Bearer <token> ```  # Oura HTTP Response Codes  | Response Code                        | Description | | ------------------------------------ | - | | 200 OK                               | Successful Response         | | 400 Query Parameter Validation Error | The request contains query parameters that are invalid or incorrectly formatted. | | 429 Request Rate Limit Exceeded        | The API is rate limited to 5000 requests in a 5 minute period. You will receive a 429 error code if you exceed this limit. [Contact us](mailto:api-support@ouraring.com) if you expect your usage to exceed this limit.| 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oura

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnhancedTagModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnhancedTagModel{}

// EnhancedTagModel An EnhancedTagModel maps an ASSATag. An ASSATag in ExtAPIV2 is called a EnhancedTag An EnhancedTagModel will be populated by data from an ASSATag The fields in the EnhancedTagModel map to fields in an ASSATag
type EnhancedTagModel struct {
	Id string `json:"id"`
	TagTypeCode NullableString `json:"tag_type_code,omitempty"`
	// Timestamp of the tag (if no duration) or the start time of the tag (with duration).
	StartTime string `json:"start_time"`
	EndTime *string `json:"end_time,omitempty"`
	// Day of the tag (if no duration) or the start day of the tag (with duration).
	StartDay string `json:"start_day"`
	EndDay NullableString `json:"end_day,omitempty"`
	Comment NullableString `json:"comment,omitempty"`
	CustomName NullableString `json:"custom_name,omitempty"`
}

type _EnhancedTagModel EnhancedTagModel

// NewEnhancedTagModel instantiates a new EnhancedTagModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnhancedTagModel(id string, startTime string, startDay string) *EnhancedTagModel {
	this := EnhancedTagModel{}
	this.Id = id
	this.StartTime = startTime
	this.StartDay = startDay
	return &this
}

// NewEnhancedTagModelWithDefaults instantiates a new EnhancedTagModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnhancedTagModelWithDefaults() *EnhancedTagModel {
	this := EnhancedTagModel{}
	return &this
}

// GetId returns the Id field value
func (o *EnhancedTagModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EnhancedTagModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EnhancedTagModel) SetId(v string) {
	o.Id = v
}

// GetTagTypeCode returns the TagTypeCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhancedTagModel) GetTagTypeCode() string {
	if o == nil || IsNil(o.TagTypeCode.Get()) {
		var ret string
		return ret
	}
	return *o.TagTypeCode.Get()
}

// GetTagTypeCodeOk returns a tuple with the TagTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhancedTagModel) GetTagTypeCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TagTypeCode.Get(), o.TagTypeCode.IsSet()
}

// HasTagTypeCode returns a boolean if a field has been set.
func (o *EnhancedTagModel) HasTagTypeCode() bool {
	if o != nil && o.TagTypeCode.IsSet() {
		return true
	}

	return false
}

// SetTagTypeCode gets a reference to the given NullableString and assigns it to the TagTypeCode field.
func (o *EnhancedTagModel) SetTagTypeCode(v string) {
	o.TagTypeCode.Set(&v)
}
// SetTagTypeCodeNil sets the value for TagTypeCode to be an explicit nil
func (o *EnhancedTagModel) SetTagTypeCodeNil() {
	o.TagTypeCode.Set(nil)
}

// UnsetTagTypeCode ensures that no value is present for TagTypeCode, not even an explicit nil
func (o *EnhancedTagModel) UnsetTagTypeCode() {
	o.TagTypeCode.Unset()
}

// GetStartTime returns the StartTime field value
func (o *EnhancedTagModel) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *EnhancedTagModel) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *EnhancedTagModel) SetStartTime(v string) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *EnhancedTagModel) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTagModel) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *EnhancedTagModel) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *EnhancedTagModel) SetEndTime(v string) {
	o.EndTime = &v
}

// GetStartDay returns the StartDay field value
func (o *EnhancedTagModel) GetStartDay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDay
}

// GetStartDayOk returns a tuple with the StartDay field value
// and a boolean to check if the value has been set.
func (o *EnhancedTagModel) GetStartDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDay, true
}

// SetStartDay sets field value
func (o *EnhancedTagModel) SetStartDay(v string) {
	o.StartDay = v
}

// GetEndDay returns the EndDay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhancedTagModel) GetEndDay() string {
	if o == nil || IsNil(o.EndDay.Get()) {
		var ret string
		return ret
	}
	return *o.EndDay.Get()
}

// GetEndDayOk returns a tuple with the EndDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhancedTagModel) GetEndDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDay.Get(), o.EndDay.IsSet()
}

// HasEndDay returns a boolean if a field has been set.
func (o *EnhancedTagModel) HasEndDay() bool {
	if o != nil && o.EndDay.IsSet() {
		return true
	}

	return false
}

// SetEndDay gets a reference to the given NullableString and assigns it to the EndDay field.
func (o *EnhancedTagModel) SetEndDay(v string) {
	o.EndDay.Set(&v)
}
// SetEndDayNil sets the value for EndDay to be an explicit nil
func (o *EnhancedTagModel) SetEndDayNil() {
	o.EndDay.Set(nil)
}

// UnsetEndDay ensures that no value is present for EndDay, not even an explicit nil
func (o *EnhancedTagModel) UnsetEndDay() {
	o.EndDay.Unset()
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhancedTagModel) GetComment() string {
	if o == nil || IsNil(o.Comment.Get()) {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhancedTagModel) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *EnhancedTagModel) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *EnhancedTagModel) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *EnhancedTagModel) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *EnhancedTagModel) UnsetComment() {
	o.Comment.Unset()
}

// GetCustomName returns the CustomName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnhancedTagModel) GetCustomName() string {
	if o == nil || IsNil(o.CustomName.Get()) {
		var ret string
		return ret
	}
	return *o.CustomName.Get()
}

// GetCustomNameOk returns a tuple with the CustomName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnhancedTagModel) GetCustomNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomName.Get(), o.CustomName.IsSet()
}

// HasCustomName returns a boolean if a field has been set.
func (o *EnhancedTagModel) HasCustomName() bool {
	if o != nil && o.CustomName.IsSet() {
		return true
	}

	return false
}

// SetCustomName gets a reference to the given NullableString and assigns it to the CustomName field.
func (o *EnhancedTagModel) SetCustomName(v string) {
	o.CustomName.Set(&v)
}
// SetCustomNameNil sets the value for CustomName to be an explicit nil
func (o *EnhancedTagModel) SetCustomNameNil() {
	o.CustomName.Set(nil)
}

// UnsetCustomName ensures that no value is present for CustomName, not even an explicit nil
func (o *EnhancedTagModel) UnsetCustomName() {
	o.CustomName.Unset()
}

func (o EnhancedTagModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnhancedTagModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.TagTypeCode.IsSet() {
		toSerialize["tag_type_code"] = o.TagTypeCode.Get()
	}
	toSerialize["start_time"] = o.StartTime
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	toSerialize["start_day"] = o.StartDay
	if o.EndDay.IsSet() {
		toSerialize["end_day"] = o.EndDay.Get()
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	if o.CustomName.IsSet() {
		toSerialize["custom_name"] = o.CustomName.Get()
	}
	return toSerialize, nil
}

func (o *EnhancedTagModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"start_time",
		"start_day",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnhancedTagModel := _EnhancedTagModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnhancedTagModel)

	if err != nil {
		return err
	}

	*o = EnhancedTagModel(varEnhancedTagModel)

	return err
}

type NullableEnhancedTagModel struct {
	value *EnhancedTagModel
	isSet bool
}

func (v NullableEnhancedTagModel) Get() *EnhancedTagModel {
	return v.value
}

func (v *NullableEnhancedTagModel) Set(val *EnhancedTagModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEnhancedTagModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEnhancedTagModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnhancedTagModel(val *EnhancedTagModel) *NullableEnhancedTagModel {
	return &NullableEnhancedTagModel{value: val, isSet: true}
}

func (v NullableEnhancedTagModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnhancedTagModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


