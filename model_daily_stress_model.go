/*
Oura API Documentation

# Overview   The Oura API allows Oura users and partner applications to improve their user experience with Oura data.  This document describes the Oura API Version 2 (V2), which supports access to the latest Oura Ring data types.  For access to other data types—which have not yet migrated to V2—refer to the [Oura API Version 1 (V1)](https://cloud.ouraring.com/docs/) documentation.  # Data Access  Individual Oura users can access their own data through the API by using a [Personal Access Token](https://cloud.ouraring.com/personal-access-tokens).  If you want to retrieve data for multiple users, a registered [API Application](https://cloud.ouraring.com/oauth/applications) is required.  API Applications are limited to **10** users before requiring approval from Oura. There is no limit once an application is approved.  Additionally, Oura users **must provide consent** to share each data type an API Application has access to.  All data access requests through the Oura API require [Authentication](https://cloud.ouraring.com/docs/authentication).  Additionally, we recommend that Oura users keep their mobile app updated to support API access for the latest data types.  # Authentication  The Oura API provides two methods for Authentication: (1) the OAuth2 protocol and (2) Personal Access Tokens. For more information on the OAuth2 flow, see our [Authentication instructions](https://cloud.ouraring.com/docs/authentication).  Access tokens must be included in the request header as follows: ```http GET /v2/usercollection/personal_info HTTP/1.1 Host: api.ouraring.com Authorization: Bearer <token> ```  # Oura HTTP Response Codes  | Response Code                        | Description | | ------------------------------------ | - | | 200 OK                               | Successful Response         | | 400 Query Parameter Validation Error | The request contains query parameters that are invalid or incorrectly formatted. | | 429 Request Rate Limit Exceeded        | The API is rate limited to 5000 requests in a 5 minute period. You will receive a 429 error code if you exceed this limit. [Contact us](mailto:api-support@ouraring.com) if you expect your usage to exceed this limit.| 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oura

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DailyStressModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DailyStressModel{}

// DailyStressModel Object defining daily stress.
type DailyStressModel struct {
	Id string `json:"id"`
	// Day that the daily stress belongs to.
	Day string `json:"day"`
	StressHigh NullableInt32 `json:"stress_high"`
	RecoveryHigh NullableInt32 `json:"recovery_high"`
	DaySummary NullableDailyStressSummary `json:"day_summary,omitempty"`
}

type _DailyStressModel DailyStressModel

// NewDailyStressModel instantiates a new DailyStressModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDailyStressModel(id string, day string, stressHigh NullableInt32, recoveryHigh NullableInt32) *DailyStressModel {
	this := DailyStressModel{}
	this.Id = id
	this.Day = day
	this.StressHigh = stressHigh
	this.RecoveryHigh = recoveryHigh
	return &this
}

// NewDailyStressModelWithDefaults instantiates a new DailyStressModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDailyStressModelWithDefaults() *DailyStressModel {
	this := DailyStressModel{}
	return &this
}

// GetId returns the Id field value
func (o *DailyStressModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DailyStressModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DailyStressModel) SetId(v string) {
	o.Id = v
}

// GetDay returns the Day field value
func (o *DailyStressModel) GetDay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Day
}

// GetDayOk returns a tuple with the Day field value
// and a boolean to check if the value has been set.
func (o *DailyStressModel) GetDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Day, true
}

// SetDay sets field value
func (o *DailyStressModel) SetDay(v string) {
	o.Day = v
}

// GetStressHigh returns the StressHigh field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *DailyStressModel) GetStressHigh() int32 {
	if o == nil || o.StressHigh.Get() == nil {
		var ret int32
		return ret
	}

	return *o.StressHigh.Get()
}

// GetStressHighOk returns a tuple with the StressHigh field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DailyStressModel) GetStressHighOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StressHigh.Get(), o.StressHigh.IsSet()
}

// SetStressHigh sets field value
func (o *DailyStressModel) SetStressHigh(v int32) {
	o.StressHigh.Set(&v)
}

// GetRecoveryHigh returns the RecoveryHigh field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *DailyStressModel) GetRecoveryHigh() int32 {
	if o == nil || o.RecoveryHigh.Get() == nil {
		var ret int32
		return ret
	}

	return *o.RecoveryHigh.Get()
}

// GetRecoveryHighOk returns a tuple with the RecoveryHigh field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DailyStressModel) GetRecoveryHighOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoveryHigh.Get(), o.RecoveryHigh.IsSet()
}

// SetRecoveryHigh sets field value
func (o *DailyStressModel) SetRecoveryHigh(v int32) {
	o.RecoveryHigh.Set(&v)
}

// GetDaySummary returns the DaySummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DailyStressModel) GetDaySummary() DailyStressSummary {
	if o == nil || IsNil(o.DaySummary.Get()) {
		var ret DailyStressSummary
		return ret
	}
	return *o.DaySummary.Get()
}

// GetDaySummaryOk returns a tuple with the DaySummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DailyStressModel) GetDaySummaryOk() (*DailyStressSummary, bool) {
	if o == nil {
		return nil, false
	}
	return o.DaySummary.Get(), o.DaySummary.IsSet()
}

// HasDaySummary returns a boolean if a field has been set.
func (o *DailyStressModel) HasDaySummary() bool {
	if o != nil && o.DaySummary.IsSet() {
		return true
	}

	return false
}

// SetDaySummary gets a reference to the given NullableDailyStressSummary and assigns it to the DaySummary field.
func (o *DailyStressModel) SetDaySummary(v DailyStressSummary) {
	o.DaySummary.Set(&v)
}
// SetDaySummaryNil sets the value for DaySummary to be an explicit nil
func (o *DailyStressModel) SetDaySummaryNil() {
	o.DaySummary.Set(nil)
}

// UnsetDaySummary ensures that no value is present for DaySummary, not even an explicit nil
func (o *DailyStressModel) UnsetDaySummary() {
	o.DaySummary.Unset()
}

func (o DailyStressModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DailyStressModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["day"] = o.Day
	toSerialize["stress_high"] = o.StressHigh.Get()
	toSerialize["recovery_high"] = o.RecoveryHigh.Get()
	if o.DaySummary.IsSet() {
		toSerialize["day_summary"] = o.DaySummary.Get()
	}
	return toSerialize, nil
}

func (o *DailyStressModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"day",
		"stress_high",
		"recovery_high",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDailyStressModel := _DailyStressModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDailyStressModel)

	if err != nil {
		return err
	}

	*o = DailyStressModel(varDailyStressModel)

	return err
}

type NullableDailyStressModel struct {
	value *DailyStressModel
	isSet bool
}

func (v NullableDailyStressModel) Get() *DailyStressModel {
	return v.value
}

func (v *NullableDailyStressModel) Set(val *DailyStressModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDailyStressModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDailyStressModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDailyStressModel(val *DailyStressModel) *NullableDailyStressModel {
	return &NullableDailyStressModel{value: val, isSet: true}
}

func (v NullableDailyStressModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDailyStressModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


