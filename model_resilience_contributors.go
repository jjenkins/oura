/*
Oura API Documentation

# Overview   The Oura API allows Oura users and partner applications to improve their user experience with Oura data.  This document describes the Oura API Version 2 (V2), which supports access to the latest Oura Ring data types.  For access to other data types—which have not yet migrated to V2—refer to the [Oura API Version 1 (V1)](https://cloud.ouraring.com/docs/) documentation.  # Data Access  Individual Oura users can access their own data through the API by using a [Personal Access Token](https://cloud.ouraring.com/personal-access-tokens).  If you want to retrieve data for multiple users, a registered [API Application](https://cloud.ouraring.com/oauth/applications) is required.  API Applications are limited to **10** users before requiring approval from Oura. There is no limit once an application is approved.  Additionally, Oura users **must provide consent** to share each data type an API Application has access to.  All data access requests through the Oura API require [Authentication](https://cloud.ouraring.com/docs/authentication).  Additionally, we recommend that Oura users keep their mobile app updated to support API access for the latest data types.  # Authentication  The Oura API provides two methods for Authentication: (1) the OAuth2 protocol and (2) Personal Access Tokens. For more information on the OAuth2 flow, see our [Authentication instructions](https://cloud.ouraring.com/docs/authentication).  Access tokens must be included in the request header as follows: ```http GET /v2/usercollection/personal_info HTTP/1.1 Host: api.ouraring.com Authorization: Bearer <token> ```  # Oura HTTP Response Codes  | Response Code                        | Description | | ------------------------------------ | - | | 200 OK                               | Successful Response         | | 400 Query Parameter Validation Error | The request contains query parameters that are invalid or incorrectly formatted. | | 429 Request Rate Limit Exceeded        | The API is rate limited to 5000 requests in a 5 minute period. You will receive a 429 error code if you exceed this limit. [Contact us](mailto:api-support@ouraring.com) if you expect your usage to exceed this limit.| 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oura

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResilienceContributors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResilienceContributors{}

// ResilienceContributors struct for ResilienceContributors
type ResilienceContributors struct {
	// Sleep recovery contributor to the resilience score. Range: [0, 100]
	SleepRecovery float32 `json:"sleep_recovery"`
	// Daytime recovery contributor to the resilience score. Range: [0, 100]
	DaytimeRecovery float32 `json:"daytime_recovery"`
	// Stress contributor to the resilience score. Range: [0, 100]
	Stress float32 `json:"stress"`
}

type _ResilienceContributors ResilienceContributors

// NewResilienceContributors instantiates a new ResilienceContributors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResilienceContributors(sleepRecovery float32, daytimeRecovery float32, stress float32) *ResilienceContributors {
	this := ResilienceContributors{}
	this.SleepRecovery = sleepRecovery
	this.DaytimeRecovery = daytimeRecovery
	this.Stress = stress
	return &this
}

// NewResilienceContributorsWithDefaults instantiates a new ResilienceContributors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResilienceContributorsWithDefaults() *ResilienceContributors {
	this := ResilienceContributors{}
	return &this
}

// GetSleepRecovery returns the SleepRecovery field value
func (o *ResilienceContributors) GetSleepRecovery() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SleepRecovery
}

// GetSleepRecoveryOk returns a tuple with the SleepRecovery field value
// and a boolean to check if the value has been set.
func (o *ResilienceContributors) GetSleepRecoveryOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SleepRecovery, true
}

// SetSleepRecovery sets field value
func (o *ResilienceContributors) SetSleepRecovery(v float32) {
	o.SleepRecovery = v
}

// GetDaytimeRecovery returns the DaytimeRecovery field value
func (o *ResilienceContributors) GetDaytimeRecovery() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DaytimeRecovery
}

// GetDaytimeRecoveryOk returns a tuple with the DaytimeRecovery field value
// and a boolean to check if the value has been set.
func (o *ResilienceContributors) GetDaytimeRecoveryOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DaytimeRecovery, true
}

// SetDaytimeRecovery sets field value
func (o *ResilienceContributors) SetDaytimeRecovery(v float32) {
	o.DaytimeRecovery = v
}

// GetStress returns the Stress field value
func (o *ResilienceContributors) GetStress() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Stress
}

// GetStressOk returns a tuple with the Stress field value
// and a boolean to check if the value has been set.
func (o *ResilienceContributors) GetStressOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stress, true
}

// SetStress sets field value
func (o *ResilienceContributors) SetStress(v float32) {
	o.Stress = v
}

func (o ResilienceContributors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResilienceContributors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sleep_recovery"] = o.SleepRecovery
	toSerialize["daytime_recovery"] = o.DaytimeRecovery
	toSerialize["stress"] = o.Stress
	return toSerialize, nil
}

func (o *ResilienceContributors) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sleep_recovery",
		"daytime_recovery",
		"stress",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResilienceContributors := _ResilienceContributors{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResilienceContributors)

	if err != nil {
		return err
	}

	*o = ResilienceContributors(varResilienceContributors)

	return err
}

type NullableResilienceContributors struct {
	value *ResilienceContributors
	isSet bool
}

func (v NullableResilienceContributors) Get() *ResilienceContributors {
	return v.value
}

func (v *NullableResilienceContributors) Set(val *ResilienceContributors) {
	v.value = val
	v.isSet = true
}

func (v NullableResilienceContributors) IsSet() bool {
	return v.isSet
}

func (v *NullableResilienceContributors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResilienceContributors(val *ResilienceContributors) *NullableResilienceContributors {
	return &NullableResilienceContributors{value: val, isSet: true}
}

func (v NullableResilienceContributors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResilienceContributors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


