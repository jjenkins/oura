/*
Oura API Documentation

# Overview   The Oura API allows Oura users and partner applications to improve their user experience with Oura data.  This document describes the Oura API Version 2 (V2), which supports access to the latest Oura Ring data types.  For access to other data types—which have not yet migrated to V2—refer to the [Oura API Version 1 (V1)](https://cloud.ouraring.com/docs/) documentation.  # Data Access  Individual Oura users can access their own data through the API by using a [Personal Access Token](https://cloud.ouraring.com/personal-access-tokens).  If you want to retrieve data for multiple users, a registered [API Application](https://cloud.ouraring.com/oauth/applications) is required.  API Applications are limited to **10** users before requiring approval from Oura. There is no limit once an application is approved.  Additionally, Oura users **must provide consent** to share each data type an API Application has access to.  All data access requests through the Oura API require [Authentication](https://cloud.ouraring.com/docs/authentication).  Additionally, we recommend that Oura users keep their mobile app updated to support API access for the latest data types.  # Authentication  The Oura API provides two methods for Authentication: (1) the OAuth2 protocol and (2) Personal Access Tokens. For more information on the OAuth2 flow, see our [Authentication instructions](https://cloud.ouraring.com/docs/authentication).  Access tokens must be included in the request header as follows: ```http GET /v2/usercollection/personal_info HTTP/1.1 Host: api.ouraring.com Authorization: Bearer <token> ```  # Oura HTTP Response Codes  | Response Code                        | Description | | ------------------------------------ | - | | 200 OK                               | Successful Response         | | 400 Query Parameter Validation Error | The request contains query parameters that are invalid or incorrectly formatted. | | 429 Request Rate Limit Exceeded        | The API is rate limited to 5000 requests in a 5 minute period. You will receive a 429 error code if you exceed this limit. [Contact us](mailto:api-support@ouraring.com) if you expect your usage to exceed this limit.| 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oura

import (
	"encoding/json"
	"fmt"
)

// DailyStressSummary Possible daily stress summary types.
type DailyStressSummary string

// List of DailyStressSummary
const (
	RESTORED DailyStressSummary = "restored"
	NORMAL DailyStressSummary = "normal"
	STRESSFUL DailyStressSummary = "stressful"
)

// All allowed values of DailyStressSummary enum
var AllowedDailyStressSummaryEnumValues = []DailyStressSummary{
	"restored",
	"normal",
	"stressful",
}

func (v *DailyStressSummary) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DailyStressSummary(value)
	for _, existing := range AllowedDailyStressSummaryEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DailyStressSummary", value)
}

// NewDailyStressSummaryFromValue returns a pointer to a valid DailyStressSummary
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDailyStressSummaryFromValue(v string) (*DailyStressSummary, error) {
	ev := DailyStressSummary(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DailyStressSummary: valid values are %v", v, AllowedDailyStressSummaryEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DailyStressSummary) IsValid() bool {
	for _, existing := range AllowedDailyStressSummaryEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DailyStressSummary value
func (v DailyStressSummary) Ptr() *DailyStressSummary {
	return &v
}

type NullableDailyStressSummary struct {
	value *DailyStressSummary
	isSet bool
}

func (v NullableDailyStressSummary) Get() *DailyStressSummary {
	return v.value
}

func (v *NullableDailyStressSummary) Set(val *DailyStressSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDailyStressSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDailyStressSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDailyStressSummary(val *DailyStressSummary) *NullableDailyStressSummary {
	return &NullableDailyStressSummary{value: val, isSet: true}
}

func (v NullableDailyStressSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDailyStressSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

