/*
Oura API Documentation

# Overview   The Oura API allows Oura users and partner applications to improve their user experience with Oura data.  This document describes the Oura API Version 2 (V2), which supports access to the latest Oura Ring data types.  For access to other data types—which have not yet migrated to V2—refer to the [Oura API Version 1 (V1)](https://cloud.ouraring.com/docs/) documentation.  # Data Access  Individual Oura users can access their own data through the API by using a [Personal Access Token](https://cloud.ouraring.com/personal-access-tokens).  If you want to retrieve data for multiple users, a registered [API Application](https://cloud.ouraring.com/oauth/applications) is required.  API Applications are limited to **10** users before requiring approval from Oura. There is no limit once an application is approved.  Additionally, Oura users **must provide consent** to share each data type an API Application has access to.  All data access requests through the Oura API require [Authentication](https://cloud.ouraring.com/docs/authentication).  Additionally, we recommend that Oura users keep their mobile app updated to support API access for the latest data types.  # Authentication  The Oura API provides two methods for Authentication: (1) the OAuth2 protocol and (2) Personal Access Tokens. For more information on the OAuth2 flow, see our [Authentication instructions](https://cloud.ouraring.com/docs/authentication).  Access tokens must be included in the request header as follows: ```http GET /v2/usercollection/personal_info HTTP/1.1 Host: api.ouraring.com Authorization: Bearer <token> ```  # Oura HTTP Response Codes  | Response Code                        | Description | | ------------------------------------ | - | | 200 OK                               | Successful Response         | | 400 Query Parameter Validation Error | The request contains query parameters that are invalid or incorrectly formatted. | | 429 Request Rate Limit Exceeded        | The API is rate limited to 5000 requests in a 5 minute period. You will receive a 429 error code if you exceed this limit. [Contact us](mailto:api-support@ouraring.com) if you expect your usage to exceed this limit.| 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oura

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RestModePeriodModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestModePeriodModel{}

// RestModePeriodModel Object contains information about rest mode episode.
type RestModePeriodModel struct {
	Id string `json:"id"`
	EndDay NullableString `json:"end_day,omitempty"`
	EndTime *string `json:"end_time,omitempty"`
	// Collection of episodes during rest mode, consisting of tags.
	Episodes []RestModeEpisode `json:"episodes"`
	// Start date of rest mode.
	StartDay string `json:"start_day"`
	StartTime string `json:"start_time"`
}

type _RestModePeriodModel RestModePeriodModel

// NewRestModePeriodModel instantiates a new RestModePeriodModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestModePeriodModel(id string, episodes []RestModeEpisode, startDay string, startTime string) *RestModePeriodModel {
	this := RestModePeriodModel{}
	this.Id = id
	this.Episodes = episodes
	this.StartDay = startDay
	this.StartTime = startTime
	return &this
}

// NewRestModePeriodModelWithDefaults instantiates a new RestModePeriodModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestModePeriodModelWithDefaults() *RestModePeriodModel {
	this := RestModePeriodModel{}
	return &this
}

// GetId returns the Id field value
func (o *RestModePeriodModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RestModePeriodModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RestModePeriodModel) SetId(v string) {
	o.Id = v
}

// GetEndDay returns the EndDay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestModePeriodModel) GetEndDay() string {
	if o == nil || IsNil(o.EndDay.Get()) {
		var ret string
		return ret
	}
	return *o.EndDay.Get()
}

// GetEndDayOk returns a tuple with the EndDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestModePeriodModel) GetEndDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDay.Get(), o.EndDay.IsSet()
}

// HasEndDay returns a boolean if a field has been set.
func (o *RestModePeriodModel) HasEndDay() bool {
	if o != nil && o.EndDay.IsSet() {
		return true
	}

	return false
}

// SetEndDay gets a reference to the given NullableString and assigns it to the EndDay field.
func (o *RestModePeriodModel) SetEndDay(v string) {
	o.EndDay.Set(&v)
}
// SetEndDayNil sets the value for EndDay to be an explicit nil
func (o *RestModePeriodModel) SetEndDayNil() {
	o.EndDay.Set(nil)
}

// UnsetEndDay ensures that no value is present for EndDay, not even an explicit nil
func (o *RestModePeriodModel) UnsetEndDay() {
	o.EndDay.Unset()
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *RestModePeriodModel) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestModePeriodModel) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *RestModePeriodModel) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *RestModePeriodModel) SetEndTime(v string) {
	o.EndTime = &v
}

// GetEpisodes returns the Episodes field value
func (o *RestModePeriodModel) GetEpisodes() []RestModeEpisode {
	if o == nil {
		var ret []RestModeEpisode
		return ret
	}

	return o.Episodes
}

// GetEpisodesOk returns a tuple with the Episodes field value
// and a boolean to check if the value has been set.
func (o *RestModePeriodModel) GetEpisodesOk() ([]RestModeEpisode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Episodes, true
}

// SetEpisodes sets field value
func (o *RestModePeriodModel) SetEpisodes(v []RestModeEpisode) {
	o.Episodes = v
}

// GetStartDay returns the StartDay field value
func (o *RestModePeriodModel) GetStartDay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDay
}

// GetStartDayOk returns a tuple with the StartDay field value
// and a boolean to check if the value has been set.
func (o *RestModePeriodModel) GetStartDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDay, true
}

// SetStartDay sets field value
func (o *RestModePeriodModel) SetStartDay(v string) {
	o.StartDay = v
}

// GetStartTime returns the StartTime field value
func (o *RestModePeriodModel) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *RestModePeriodModel) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *RestModePeriodModel) SetStartTime(v string) {
	o.StartTime = v
}

func (o RestModePeriodModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestModePeriodModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.EndDay.IsSet() {
		toSerialize["end_day"] = o.EndDay.Get()
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	toSerialize["episodes"] = o.Episodes
	toSerialize["start_day"] = o.StartDay
	toSerialize["start_time"] = o.StartTime
	return toSerialize, nil
}

func (o *RestModePeriodModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"episodes",
		"start_day",
		"start_time",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestModePeriodModel := _RestModePeriodModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestModePeriodModel)

	if err != nil {
		return err
	}

	*o = RestModePeriodModel(varRestModePeriodModel)

	return err
}

type NullableRestModePeriodModel struct {
	value *RestModePeriodModel
	isSet bool
}

func (v NullableRestModePeriodModel) Get() *RestModePeriodModel {
	return v.value
}

func (v *NullableRestModePeriodModel) Set(val *RestModePeriodModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRestModePeriodModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRestModePeriodModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestModePeriodModel(val *RestModePeriodModel) *NullableRestModePeriodModel {
	return &NullableRestModePeriodModel{value: val, isSet: true}
}

func (v NullableRestModePeriodModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestModePeriodModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


