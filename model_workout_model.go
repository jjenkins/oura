/*
Oura API Documentation

# Overview   The Oura API allows Oura users and partner applications to improve their user experience with Oura data.  This document describes the Oura API Version 2 (V2), which supports access to the latest Oura Ring data types.  For access to other data types—which have not yet migrated to V2—refer to the [Oura API Version 1 (V1)](https://cloud.ouraring.com/docs/) documentation.  # Data Access  Individual Oura users can access their own data through the API by using a [Personal Access Token](https://cloud.ouraring.com/personal-access-tokens).  If you want to retrieve data for multiple users, a registered [API Application](https://cloud.ouraring.com/oauth/applications) is required.  API Applications are limited to **10** users before requiring approval from Oura. There is no limit once an application is approved.  Additionally, Oura users **must provide consent** to share each data type an API Application has access to.  All data access requests through the Oura API require [Authentication](https://cloud.ouraring.com/docs/authentication).  Additionally, we recommend that Oura users keep their mobile app updated to support API access for the latest data types.  # Authentication  The Oura API provides two methods for Authentication: (1) the OAuth2 protocol and (2) Personal Access Tokens. For more information on the OAuth2 flow, see our [Authentication instructions](https://cloud.ouraring.com/docs/authentication).  Access tokens must be included in the request header as follows: ```http GET /v2/usercollection/personal_info HTTP/1.1 Host: api.ouraring.com Authorization: Bearer <token> ```  # Oura HTTP Response Codes  | Response Code                        | Description | | ------------------------------------ | - | | 200 OK                               | Successful Response         | | 400 Query Parameter Validation Error | The request contains query parameters that are invalid or incorrectly formatted. | | 429 Request Rate Limit Exceeded        | The API is rate limited to 5000 requests in a 5 minute period. You will receive a 429 error code if you exceed this limit. [Contact us](mailto:api-support@ouraring.com) if you expect your usage to exceed this limit.| 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oura

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WorkoutModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkoutModel{}

// WorkoutModel struct for WorkoutModel
type WorkoutModel struct {
	Id string `json:"id"`
	// Type of the workout activity.
	Activity string `json:"activity"`
	Calories NullableFloat32 `json:"calories"`
	// Day when the workout occurred.
	Day string `json:"day"`
	Distance NullableFloat32 `json:"distance"`
	// Timestamp indicating when the workout ended.
	EndDatetime string `json:"end_datetime"`
	Intensity WorkoutIntensity `json:"intensity"`
	Label NullableString `json:"label"`
	// Possible workout sources.
	Source WorkoutSource `json:"source"`
	// Timestamp indicating when the workout started.
	StartDatetime string `json:"start_datetime"`
}

type _WorkoutModel WorkoutModel

// NewWorkoutModel instantiates a new WorkoutModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkoutModel(id string, activity string, calories NullableFloat32, day string, distance NullableFloat32, endDatetime string, intensity WorkoutIntensity, label NullableString, source WorkoutSource, startDatetime string) *WorkoutModel {
	this := WorkoutModel{}
	this.Id = id
	this.Activity = activity
	this.Calories = calories
	this.Day = day
	this.Distance = distance
	this.EndDatetime = endDatetime
	this.Intensity = intensity
	this.Label = label
	this.Source = source
	this.StartDatetime = startDatetime
	return &this
}

// NewWorkoutModelWithDefaults instantiates a new WorkoutModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkoutModelWithDefaults() *WorkoutModel {
	this := WorkoutModel{}
	return &this
}

// GetId returns the Id field value
func (o *WorkoutModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkoutModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkoutModel) SetId(v string) {
	o.Id = v
}

// GetActivity returns the Activity field value
func (o *WorkoutModel) GetActivity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Activity
}

// GetActivityOk returns a tuple with the Activity field value
// and a boolean to check if the value has been set.
func (o *WorkoutModel) GetActivityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Activity, true
}

// SetActivity sets field value
func (o *WorkoutModel) SetActivity(v string) {
	o.Activity = v
}

// GetCalories returns the Calories field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *WorkoutModel) GetCalories() float32 {
	if o == nil || o.Calories.Get() == nil {
		var ret float32
		return ret
	}

	return *o.Calories.Get()
}

// GetCaloriesOk returns a tuple with the Calories field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkoutModel) GetCaloriesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Calories.Get(), o.Calories.IsSet()
}

// SetCalories sets field value
func (o *WorkoutModel) SetCalories(v float32) {
	o.Calories.Set(&v)
}

// GetDay returns the Day field value
func (o *WorkoutModel) GetDay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Day
}

// GetDayOk returns a tuple with the Day field value
// and a boolean to check if the value has been set.
func (o *WorkoutModel) GetDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Day, true
}

// SetDay sets field value
func (o *WorkoutModel) SetDay(v string) {
	o.Day = v
}

// GetDistance returns the Distance field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *WorkoutModel) GetDistance() float32 {
	if o == nil || o.Distance.Get() == nil {
		var ret float32
		return ret
	}

	return *o.Distance.Get()
}

// GetDistanceOk returns a tuple with the Distance field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkoutModel) GetDistanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Distance.Get(), o.Distance.IsSet()
}

// SetDistance sets field value
func (o *WorkoutModel) SetDistance(v float32) {
	o.Distance.Set(&v)
}

// GetEndDatetime returns the EndDatetime field value
func (o *WorkoutModel) GetEndDatetime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDatetime
}

// GetEndDatetimeOk returns a tuple with the EndDatetime field value
// and a boolean to check if the value has been set.
func (o *WorkoutModel) GetEndDatetimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDatetime, true
}

// SetEndDatetime sets field value
func (o *WorkoutModel) SetEndDatetime(v string) {
	o.EndDatetime = v
}

// GetIntensity returns the Intensity field value
func (o *WorkoutModel) GetIntensity() WorkoutIntensity {
	if o == nil {
		var ret WorkoutIntensity
		return ret
	}

	return o.Intensity
}

// GetIntensityOk returns a tuple with the Intensity field value
// and a boolean to check if the value has been set.
func (o *WorkoutModel) GetIntensityOk() (*WorkoutIntensity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Intensity, true
}

// SetIntensity sets field value
func (o *WorkoutModel) SetIntensity(v WorkoutIntensity) {
	o.Intensity = v
}

// GetLabel returns the Label field value
// If the value is explicit nil, the zero value for string will be returned
func (o *WorkoutModel) GetLabel() string {
	if o == nil || o.Label.Get() == nil {
		var ret string
		return ret
	}

	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkoutModel) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// SetLabel sets field value
func (o *WorkoutModel) SetLabel(v string) {
	o.Label.Set(&v)
}

// GetSource returns the Source field value
func (o *WorkoutModel) GetSource() WorkoutSource {
	if o == nil {
		var ret WorkoutSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *WorkoutModel) GetSourceOk() (*WorkoutSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *WorkoutModel) SetSource(v WorkoutSource) {
	o.Source = v
}

// GetStartDatetime returns the StartDatetime field value
func (o *WorkoutModel) GetStartDatetime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDatetime
}

// GetStartDatetimeOk returns a tuple with the StartDatetime field value
// and a boolean to check if the value has been set.
func (o *WorkoutModel) GetStartDatetimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDatetime, true
}

// SetStartDatetime sets field value
func (o *WorkoutModel) SetStartDatetime(v string) {
	o.StartDatetime = v
}

func (o WorkoutModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkoutModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["activity"] = o.Activity
	toSerialize["calories"] = o.Calories.Get()
	toSerialize["day"] = o.Day
	toSerialize["distance"] = o.Distance.Get()
	toSerialize["end_datetime"] = o.EndDatetime
	toSerialize["intensity"] = o.Intensity
	toSerialize["label"] = o.Label.Get()
	toSerialize["source"] = o.Source
	toSerialize["start_datetime"] = o.StartDatetime
	return toSerialize, nil
}

func (o *WorkoutModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"activity",
		"calories",
		"day",
		"distance",
		"end_datetime",
		"intensity",
		"label",
		"source",
		"start_datetime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkoutModel := _WorkoutModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkoutModel)

	if err != nil {
		return err
	}

	*o = WorkoutModel(varWorkoutModel)

	return err
}

type NullableWorkoutModel struct {
	value *WorkoutModel
	isSet bool
}

func (v NullableWorkoutModel) Get() *WorkoutModel {
	return v.value
}

func (v *NullableWorkoutModel) Set(val *WorkoutModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkoutModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkoutModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkoutModel(val *WorkoutModel) *NullableWorkoutModel {
	return &NullableWorkoutModel{value: val, isSet: true}
}

func (v NullableWorkoutModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkoutModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


